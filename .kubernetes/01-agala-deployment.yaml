apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: agala-staging
  name: agala-staging
  namespace: default
spec:
  selector:
    matchLabels:
      app: agala-staging
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: agala-staging
    spec:
      containers:
        - command:
            - /bin/bash
            - -c
          args:
            - cd /app && composer install && php artisan migrate && php artisan db:seed && chown -R www-data:www-data /app/storage && a2enmod rewrite && service apache2 restart && sleep infinity
          env:
          image: neiellcare71/agala:latest
          imagePullPolicy: Always
          name: agala-staging
          ports:
            - containerPort: 80
              name: agala-staging
              protocol: TCP
          volumeMounts:
            - mountPath: /app
              name: app
            - mountPath: /root/.ssh
              name: id-rsa
            - name: agala-env
              mountPath: /app/.env
              subPath: env
      hostname: agala-staging
      initContainers:
        - args:
            - find /app -mindepth 1 -delete; git clone -b develop --depth=1 --single-branch
              git@github.com:TFOE-PE-NMR8/aGala.git /app
          command:
            - /bin/sh
            - -c
          image: alpine/git@sha256:8f5659025d83a60e9d140123bb1b27f3c334578aef10d002da4e5848580f1a6c
          imagePullPolicy: IfNotPresent
          name: init
          volumeMounts:
            - mountPath: /app
              name: app
            - mountPath: /root/.ssh
              name: id-rsa
        - args:
            - cd /app && npm install && npm run development
          command:
            - /bin/sh
            - -c
          image: node:latest
          imagePullPolicy: IfNotPresent
          name: npm
          volumeMounts:
            - mountPath: /app
              name: app
      restartPolicy: Always
      volumes:
        - emptyDir: {}
          name: app
        - name: agala-env
          configMap:
            name: agala-env
        - name: id-rsa
          secret:
            defaultMode: 384
            items:
              - key: id_rsa
                path: id_rsa
              - key: known_hosts
                path: known_hosts
            secretName: neiell-test
#            secretName: agala-rsa
---
apiVersion: v1
kind: Service
metadata:
  name: agala-staging
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: agala-staging
  ports:
    - name: agala-staging
      protocol: TCP
      port: 80
